// <auto-generated />
using System;
using FinanceSolution.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinanceSolution.Data.Migrations
{
    [DbContext(typeof(FinanceSolutionContext))]
    [Migration("20211125144056_CreateV3")]
    partial class CreateV3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("FinanceSolution.Data.Models.LancamentoArquivoModel", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Extensao")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("LancamentoCodigo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("Stream")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Codigo");

                    b.HasIndex("LancamentoCodigo");

                    b.ToTable("LancamentoArquivo");
                });

            modelBuilder.Entity("FinanceSolution.Data.Models.LancamentoModel", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<int>("LancamentoTipoCodigo")
                        .HasColumnType("int");

                    b.Property<int>("MetodoPagamentoCodigo")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasMaxLength(240)
                        .HasColumnType("varchar(240)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<int>("UsuarioCodigo")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Codigo");

                    b.HasIndex("LancamentoTipoCodigo");

                    b.HasIndex("MetodoPagamentoCodigo");

                    b.HasIndex("UsuarioCodigo");

                    b.ToTable("Lancamento");
                });

            modelBuilder.Entity("FinanceSolution.Data.Models.LancamentoTipoModel", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.ToTable("LancamentoTipo");
                });

            modelBuilder.Entity("FinanceSolution.Data.Models.MetodoPagamentoModel", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.HasKey("Codigo");

                    b.ToTable("MetodoPagamento");
                });

            modelBuilder.Entity("FinanceSolution.Data.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.HasKey("Codigo");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("FinanceSolution.Data.Models.LancamentoArquivoModel", b =>
                {
                    b.HasOne("FinanceSolution.Data.Models.LancamentoModel", "Lancamento")
                        .WithMany("LancamentoArquivos")
                        .HasForeignKey("LancamentoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lancamento");
                });

            modelBuilder.Entity("FinanceSolution.Data.Models.LancamentoModel", b =>
                {
                    b.HasOne("FinanceSolution.Data.Models.LancamentoTipoModel", "LancamentoTipo")
                        .WithMany("Lancamentos")
                        .HasForeignKey("LancamentoTipoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceSolution.Data.Models.MetodoPagamentoModel", "MetodoPagamento")
                        .WithMany("Lancamentos")
                        .HasForeignKey("MetodoPagamentoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceSolution.Data.Models.UsuarioModel", "Usuario")
                        .WithMany("Lancamentos")
                        .HasForeignKey("UsuarioCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LancamentoTipo");

                    b.Navigation("MetodoPagamento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FinanceSolution.Data.Models.LancamentoModel", b =>
                {
                    b.Navigation("LancamentoArquivos");
                });

            modelBuilder.Entity("FinanceSolution.Data.Models.LancamentoTipoModel", b =>
                {
                    b.Navigation("Lancamentos");
                });

            modelBuilder.Entity("FinanceSolution.Data.Models.MetodoPagamentoModel", b =>
                {
                    b.Navigation("Lancamentos");
                });

            modelBuilder.Entity("FinanceSolution.Data.Models.UsuarioModel", b =>
                {
                    b.Navigation("Lancamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
